/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kencode.project.view;

import com.kencode.project.controller.ControllerFactory;
import com.kencode.project.controller.custom.BoatController;
import com.kencode.project.controller.custom.CustomerController;
import com.kencode.project.controller.custom.IdController;
import com.kencode.project.dto.BoatDTO;
import com.kencode.project.dto.CustomerDTO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sandun Dilhan
 */
public class CustomerPanel extends javax.swing.JPanel {
    private CustomerController ctrlCustomer;
    private BoatController ctrlBoat;
    private IdController ctrlID;
    /**
     * Creates new form CustomePanel
     */
    public CustomerPanel() {
        initComponents();
        setSize(1366, 604);
        txtCustId.setEditable(false);
        txtBoatId.setEditable(false);
        
        ctrlCustomer=(CustomerController) ControllerFactory.getInstance().getControllerTypes(ControllerFactory.ControllerTypes.CUSTOMER);
        ctrlBoat=(BoatController) ControllerFactory.getInstance().getControllerTypes(ControllerFactory.ControllerTypes.BOAT);
        ctrlID=(IdController) ControllerFactory.getInstance().getControllerTypes(ControllerFactory.ControllerTypes.IDGEN);
        
        txtCustId.setEditable(false);
        txtBoatName.setEditable(false);
        
        viewAllCustomer();
        genarateCustomerID();
        genarateBoatID();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCustId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TxtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTPNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtBoatName = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtBoatId = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBoat = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Customer Id");

        txtCustId.setBackground(new java.awt.Color(153, 153, 153));
        txtCustId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustIdActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Customer Name");

        TxtName.setFont(new java.awt.Font("FMAbhaya", 0, 18)); // NOI18N
        TxtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtNameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("TP No");

        txtTPNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTPNoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Boat Name");

        txtBoatName.setFont(new java.awt.Font("FMAbhaya", 0, 18)); // NOI18N
        txtBoatName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBoatNameActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemove.setText("REMOVE");
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveMouseClicked(evt);
            }
        });
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearch.setText("SEARCH");
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSearchMouseClicked(evt);
            }
        });
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Boat Id");

        txtBoatId.setBackground(new java.awt.Color(153, 153, 153));
        txtBoatId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBoatIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCustId, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBoatId, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBoatName, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtName, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTPNo, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTPNo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TxtName, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                    .addComponent(txtCustId)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtBoatId, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtBoatName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(32, 32, 32))))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        tblCustomer.setFont(new java.awt.Font("FMAbhaya", 1, 18)); // NOI18N
        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Id", "Customer Name", "TP No"
            }
        ));
        tblCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustomerMouseClicked(evt);
            }
        });
        tblCustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblCustomerKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblCustomer);
        if (tblCustomer.getColumnModel().getColumnCount() > 0) {
            tblCustomer.getColumnModel().getColumn(0).setMinWidth(0);
            tblCustomer.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblCustomer.getColumnModel().getColumn(0).setMaxWidth(0);
            tblCustomer.getColumnModel().getColumn(1).setPreferredWidth(250);
        }

        tblBoat.setFont(new java.awt.Font("FMAbhaya", 0, 18)); // NOI18N
        tblBoat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Boat Id", "Boat Name"
            }
        ));
        jScrollPane2.setViewportView(tblBoat);
        if (tblBoat.getColumnModel().getColumnCount() > 0) {
            tblBoat.getColumnModel().getColumn(0).setMinWidth(0);
            tblBoat.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblBoat.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("REMOVE ROW");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCustIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustIdActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtBoatNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBoatNameActionPerformed
        //cmbBoatNomber.addItem(txtBoatName.getText());
        addBoat();
        String boat=txtBoatName.getText();
        String bid=txtBoatId.getText();
        DefaultTableModel dtm=(DefaultTableModel) tblBoat.getModel();
        Object[] rowData={bid,boat};
        dtm.addRow(rowData);
        generateContiuesBID();
        txtBoatName.setText("");
        
    }//GEN-LAST:event_txtBoatNameActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustomerMouseClicked
        selectCustomer();
        loadBoat();
    }//GEN-LAST:event_tblCustomerMouseClicked

    private void tblCustomerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCustomerKeyReleased
        selectCustomer();
        loadBoat();
    }//GEN-LAST:event_tblCustomerKeyReleased

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        addCustomer();
        txtBoatName.setEditable(true);
        txtBoatName.requestFocus();
        try {
           // addCustomerAction();
            DefaultTableModel dtm=(DefaultTableModel) tblBoat.getModel();
            dtm.setRowCount(0);
            txtBoatId.setText(ctrlID.getNewID("boat","bid","BT",3));
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddMouseClicked

    private void btnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseClicked
       String custId=txtCustId.getText();
        try {
            boolean isDeleted=ctrlCustomer.delete(custId);
            if(isDeleted){
                JOptionPane.showMessageDialog(this,"Customer has been successfully Deleted...!");
                viewAllCustomer();
                DefaultTableModel dtm=(DefaultTableModel) tblBoat.getModel();
                dtm.setRowCount(0);
                genarateCustomerID();
                
            }else{
                JOptionPane.showMessageDialog(this,"Customer has not been Deleted...!");
                clearTxtAction();
            }
            txtBoatId.setText(ctrlID.getNewID("boat","bid","BT",3));
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRemoveMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        DefaultTableModel dtm=(DefaultTableModel) tblBoat.getModel();
        dtm.removeRow(tblBoat.getSelectedRow());
    }//GEN-LAST:event_jButton1MouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        updateCustomer();
       /* if(tblCustomer.getSelectedRow()>0){

            String id=txtCustId.getText();
            String name=TxtName.getText();
            String tpn=txtTPNo.getText();

            DefaultTableModel dtm=(DefaultTableModel) tblBoat.getModel();
            ArrayList<BoatDTO>boatList=new ArrayList<>();
            for (int i = 0; i <dtm.getRowCount(); i++) {
                String boatName=(String) dtm.getValueAt(i, 1);
                String bid=(String) dtm.getValueAt(i, 0);
                BoatDTO boat=new BoatDTO(bid, boatName,id);
                boatList.add(boat);
            }
            CustomerDTO customer=new CustomerDTO(id, name, tpn);
            try {

                ArrayList<BoatDTO> list=ctrlBoat.getAll();
                ArrayList<BoatDTO> currentList=new ArrayList<>();
                for (BoatDTO boatDTO : list) {
                    if(boatDTO.getCid().equals(id)){
                        currentList.add(boatDTO);
                        System.out.println(boatDTO.getBid());
                    }
                }
                boolean isRemoveBoat=ctrlBoat.removeList(currentList);
                if(isRemoveBoat){
                    System.out.println("1");
                    boolean isUpdated=ctrlCustomer.updateCustomer(customer, boatList);
                    if(isUpdated){
                        JOptionPane.showMessageDialog(null,"Customer has been successfully updated...!");
                        viewAllCustomer();
                        txtBoatId.setText(ctrlID.getNewID("boat","bid","BT",3));

                    }else{
                        JOptionPane.showMessageDialog(null,"Customer has not been updated...!");

                    }
                }else{
                    System.out.println("2");
                    JOptionPane.showMessageDialog(null,"Customer has not been updated...!");
                }

            } catch (Exception ex) {
                Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else if(tblCustomer.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null,"You must select a row before update!");
        }*/
          
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        clearTxtAction();
    }//GEN-LAST:event_btnClearMouseClicked

    private void btnSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseClicked
        String name=TxtName.getText();
        try {
            CustomerDTO cust=ctrlCustomer.search(name);
            if(cust!=null){
                txtCustId.setText(cust.getCid());
                txtTPNo.setText(cust.getTel());
                loadBoat();
            }else{
                JOptionPane.showMessageDialog(null,"Customer not found...!");
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchMouseClicked

    private void TxtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtNameActionPerformed
        txtTPNo.requestFocus();
    }//GEN-LAST:event_TxtNameActionPerformed

    private void txtTPNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTPNoActionPerformed
        addCustomer();
        txtBoatName.setEditable(true);
        txtBoatName.requestFocus();
    }//GEN-LAST:event_txtTPNoActionPerformed

    private void txtBoatIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBoatIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBoatIdActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtName;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblBoat;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTextField txtBoatId;
    private javax.swing.JTextField txtBoatName;
    private javax.swing.JTextField txtCustId;
    private javax.swing.JTextField txtTPNo;
    // End of variables declaration//GEN-END:variables
    private void selectCustomer(){
        DefaultTableModel dtm=(DefaultTableModel) tblCustomer.getModel();
        int selectRow=tblCustomer.getSelectedRow();
        txtCustId.setText(dtm.getValueAt(selectRow, 0).toString());
        TxtName.setText(dtm.getValueAt(selectRow, 1).toString());
        txtTPNo.setText(dtm.getValueAt(selectRow, 2).toString());
        txtBoatName.setEditable(true);
    }
    private void viewAllCustomer(){
        try {
            ArrayList<CustomerDTO>customerList=ctrlCustomer.getAll();
            DefaultTableModel dtm=(DefaultTableModel) tblCustomer.getModel();
            dtm.setRowCount(0);
            for (CustomerDTO cList : customerList) {
                Object[]rowData={cList.getCid(),cList.getCust_name(),cList.getTel()};
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
   private void addCustomerAction(){
        String custId=txtCustId.getText();
        String name=TxtName.getText();
        String tel=txtTPNo.getText();
        
        DefaultTableModel dtm=(DefaultTableModel) tblBoat.getModel();
         ArrayList<BoatDTO>boatList=new ArrayList<>();
        for (int i=0;i<dtm.getRowCount();i++) {
            String boatName=(String) dtm.getValueAt(i, 1);
            String bid=(String)dtm.getValueAt(i, 0);
            BoatDTO boat=new BoatDTO(bid,boatName,custId);
            boatList.add(boat);

        }
        
        CustomerDTO customer=new CustomerDTO(custId, name, tel);
        try {
            boolean isAdded=ctrlCustomer.addNewCustomer(customer, boatList);
            if(isAdded){
                JOptionPane.showMessageDialog(null,"New Customer has been successfully added...!");
                viewAllCustomer();
                clearTxtAction();
            }else{
                JOptionPane.showMessageDialog(null,"New Customer has not been added...!");
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void loadBoat(){
        String id=txtCustId.getText();
        try {
            DefaultTableModel dtm=(DefaultTableModel) tblBoat.getModel();
            ArrayList<BoatDTO>boatList=ctrlBoat.searchBoat(id);
            dtm.setRowCount(0);
            for (BoatDTO bList : boatList) {
                Object[]rowData={bList.getBid(),bList.getBoat_name()};
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void clearTxtAction(){
        TxtName.setText("");
        txtTPNo.setText("");
        txtCustId.setText("");
        genarateCustomerID();
        DefaultTableModel dtm=(DefaultTableModel) tblBoat.getModel();
        dtm.setRowCount(0);
        txtBoatName.setEditable(false);
    }
    private void genarateCustomerID() {
        
        try {
            String id=ctrlID.getNewID("customer", "cid", "C", 3);
            txtCustId.setText(id);
        } catch (Exception ex) {
            Logger.getLogger(GinPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void genarateBoatID() {
        
        try {
            String id=ctrlID.getNewID("boat", "bid", "BT", 3);
            txtBoatId.setText(id);
        } catch (Exception ex) {
            Logger.getLogger(GinPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void generateContiuesBID() {
        
        String batch=txtBoatId.getText();
        
        char[] batchArr=batch.toCharArray();

        if(batchArr[2]=='0' && batchArr[3]=='0' && batchArr[4]=='0' && batchArr[5]=='9'){
            txtBoatId.setText("BT0010");
            return;
        }else if(batchArr[2]=='0' && batchArr[3]=='0' && batchArr[4]=='9' && batchArr[5]=='9'){
            txtBoatId.setText("BT0100");
            return;
        }else if(batchArr[2]=='0' && batchArr[3]=='9' && batchArr[4]=='9' && batchArr[5]=='9' && batchArr.length==6){
            txtBoatId.setText("BT1000");
            return;
        }else if(batchArr[2]=='9' && batchArr[3]=='9' && batchArr[4]=='9' && batchArr[5]=='9' && batchArr.length==6){
            txtBoatId.setText("BT10000");
            return;
        }else if(batchArr[2]=='9' && batchArr[3]=='9' && batchArr[4]=='9' && batchArr[5]=='9' && batchArr[6]=='9' && batchArr.length==7){
            txtBoatId.setText("BT100000");
            return;
        }else if(batchArr[2]=='9' && batchArr[3]=='9' && batchArr[4]=='9' && batchArr[5]=='9' && batchArr[6]=='9' && batchArr[7]=='9' && batchArr.length==8){
            txtBoatId.setText("BT1000000");
            return;
        }
        if(batchArr[2]=='0' && batchArr[3]=='0' && batchArr[4]=='0' &&  batchArr[5]<'9'){

           int batchNo=Integer.parseInt(batchArr[5]+"")+1;
           txtBoatId.setText("BT000"+Integer.toString(batchNo));

        }else{
            String batchNo="";
            for(int i=2;i<batchArr.length;i++){
                batchNo=batchNo+(batchArr[i]+"");
            }
            int nextNo=Integer.parseInt(batchNo)+1;

            char[] num=Integer.toString(nextNo).toCharArray();
            if(num.length==2){

                txtBoatId.setText("BT00"+nextNo);
            }else if(num.length==3){

                txtBoatId.setText("BT0"+nextNo);
            }else if(num.length>3){

                txtBoatId.setText("BT"+nextNo);
            }
        } 
    }
    private void addBoat(){
        BoatDTO boat=new BoatDTO(
            txtBoatId.getText(),
            txtCustId.getText(),
            txtBoatName.getText());
        try {
            boolean isAdded=ctrlBoat.add(boat);
            //System.out.println(ctrlBoat.add(boat));
            if(isAdded){
                JOptionPane.showMessageDialog(null, "Boat Added Success...!");
                
            }else{
                JOptionPane.showMessageDialog(null, "Boat Added Faild...!");
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void addCustomer(){
        CustomerDTO cust=new CustomerDTO(
            txtCustId.getText(),
            TxtName.getText(),
            txtTPNo.getText());
        try {
            boolean isAdded=ctrlCustomer.add(cust);
            if(isAdded){
                JOptionPane.showMessageDialog(null,"Customer Added Success...!");
                viewAllCustomer();
            }else{
                JOptionPane.showMessageDialog(null,"Customer Added Failed...!");
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void updateCustomer(){
        CustomerDTO cust=new CustomerDTO(
            txtCustId.getText(),
            TxtName.getText(),
            txtTPNo.getText());
        try {
            boolean isUpdated=ctrlCustomer.update(cust);
            if(isUpdated){
                JOptionPane.showMessageDialog(null,"Customer Updated Success...!");
                viewAllCustomer();
            }else{
                 JOptionPane.showMessageDialog(null,"Customer Updated Failed...!");
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}

