/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kencode.project.view;

import java.awt.Color;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Sandun Dilhan
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    Properties dbProperties=new Properties();
    public MainFrame() {
        
        try {
            File dbFile=new File("Settings/dbProperties.properties");
            FileReader dbReader=new FileReader(dbFile);
            dbProperties.load(dbReader);
            
            initComponents();
            setSize(1366,768);
            
            lblCustomer.setBackground(null);
            lblGin.setBackground(null);
            lblItem.setBackground(null);
            lblInvoice.setBackground(null);
            lblSetting.setBackground(null);
            
            
            theme();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblGin = new javax.swing.JLabel();
        lblInvoice = new javax.swing.JLabel();
        lblItem = new javax.swing.JLabel();
        lblCustomer = new javax.swing.JLabel();
        lblSetting = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kencode/project/image/loggo_1.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("AMITH INDUSTRIES");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kencode/project/image/flip_vertical_horizontal_object-512.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        lblGin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblGin.setText("GIN");
        lblGin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGinMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblGinMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblGinMouseExited(evt);
            }
        });

        lblInvoice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblInvoice.setText("Invoice");
        lblInvoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInvoiceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblInvoiceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblInvoiceMouseExited(evt);
            }
        });

        lblItem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblItem.setText("Item");
        lblItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblItemMouseExited(evt);
            }
        });

        lblCustomer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCustomer.setText("Customer");
        lblCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCustomerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCustomerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCustomerMouseExited(evt);
            }
        });

        lblSetting.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSetting.setText("Settings");
        lblSetting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSettingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSettingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSettingMouseExited(evt);
            }
        });

        jButton1.setText("BACKUP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblGin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(lblInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(lblItem, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(lblCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(lblSetting, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGin)
                    .addComponent(lblInvoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblItem)
                    .addComponent(lblCustomer)
                    .addComponent(lblSetting))
                .addContainerGap())
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1366, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 617, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblGinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGinMouseExited
        lblGin.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblGinMouseExited

    private void lblGinMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGinMouseEntered
        lblGin.setForeground(Color.WHITE);
    }//GEN-LAST:event_lblGinMouseEntered

    private void lblInvoiceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInvoiceMouseExited
        lblInvoice.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblInvoiceMouseExited

    private void lblInvoiceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInvoiceMouseEntered
        lblInvoice.setForeground(Color.WHITE);
    }//GEN-LAST:event_lblInvoiceMouseEntered

    private void lblItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblItemMouseExited
        lblItem.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblItemMouseExited

    private void lblItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblItemMouseEntered
        lblItem.setForeground(Color.WHITE);
    }//GEN-LAST:event_lblItemMouseEntered

    private void lblCustomerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCustomerMouseExited
        lblCustomer.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblCustomerMouseExited

    private void lblCustomerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCustomerMouseEntered
        lblCustomer.setForeground(Color.WHITE);
    }//GEN-LAST:event_lblCustomerMouseEntered

    private void lblCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCustomerMouseClicked
        lblCustomer.setBackground(Color.white);
        lblGin.setBackground(null);
        lblItem.setBackground(null);
        lblInvoice.setBackground(null);
        lblSetting.setBackground(null);
        lblCustomer.setOpaque(true);
        
        
        CustomerPanel cp=new CustomerPanel();
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        cp.setSize(mainPanel.getSize());
        mainPanel.add(cp);
    }//GEN-LAST:event_lblCustomerMouseClicked

    private void lblItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblItemMouseClicked
        lblCustomer.setBackground(null);
        lblGin.setBackground(null);
        lblItem.setBackground(Color.white);
        lblInvoice.setBackground(null);
        lblSetting.setBackground(null);
        lblItem.setOpaque(true);
       
        
        ItemPanel item=new ItemPanel();
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        item.setSize(mainPanel.getSize());
        mainPanel.add(item);
    }//GEN-LAST:event_lblItemMouseClicked

    private void lblGinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGinMouseClicked
        lblCustomer.setBackground(null);
        lblGin.setBackground(Color.white);
        lblItem.setBackground(null);
        lblInvoice.setBackground(null);
        lblSetting.setBackground(null);
        lblGin.setOpaque(true);
        
        
       GinPanel gin=new GinPanel();
       mainPanel.removeAll();
       mainPanel.repaint();
       mainPanel.revalidate();
       gin.setSize(mainPanel.getSize());
       mainPanel.add(gin);
    }//GEN-LAST:event_lblGinMouseClicked

    private void lblInvoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInvoiceMouseClicked
        lblInvoice.setOpaque(true);
        lblCustomer.setBackground(null);
        lblGin.setBackground(null);
        lblItem.setBackground(null);
        lblSetting.setBackground(null);
        lblInvoice.setBackground(Color.white);
        
        InvoicePanel invoice=new InvoicePanel();
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        invoice.setSize(mainPanel.getSize());
        mainPanel.add(invoice);
    }//GEN-LAST:event_lblInvoiceMouseClicked

    private void lblSettingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSettingMouseClicked
        lblSetting.setOpaque(true);
        lblCustomer.setBackground(null);
        lblGin.setBackground(null);
        lblItem.setBackground(null);
        lblSetting.setBackground(Color.red);
        lblInvoice.setBackground(null);
        
        SettingPanel setting=new SettingPanel();
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        setting.setSize(mainPanel.getSize());
        mainPanel.add(setting);
    }//GEN-LAST:event_lblSettingMouseClicked

    private void lblSettingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSettingMouseEntered
        lblSetting.setForeground(Color.WHITE);
    }//GEN-LAST:event_lblSettingMouseEntered

    private void lblSettingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSettingMouseExited
        lblSetting.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblSettingMouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
           // CodeSource codeSource = MainFrame.class.getProtectionDomain().getCodeSource();
           // File jarFile = new File(codeSource.getLocation().toURI().getPath());

            String jarDir = "C:\\";
            String dbName = dbProperties.getProperty("database");
            String dbName2 = dbProperties.getProperty("database2");
            String dbUser = dbProperties.getProperty("userName");
            String dbPass = dbProperties.getProperty("password");
            System.out.println(jarDir);
            String foldePath = jarDir + "\\BackupP";

            File f1 = new File(foldePath);
            f1.mkdir();

            String savePath = "\"" + jarDir + "\\BackupP\\" + "backup.sql\"";
            String savePaths = "\"" + jarDir + "\\BackupP\\" + "backupAdvance.sql\"";
            //System.out.println(savePath);
            String executeCmd = "mysqldump -u " + dbUser + " -p" + dbPass + " " + dbName + " -r " + savePath;
            String executeCmds = "mysqldump -u " + dbUser + " -p" + dbPass + " " + dbName2 + " -r " + savePaths;
            System.out.println(executeCmd);
            Process runtimeprocess = Runtime.getRuntime().exec(new String[]{"cmd.exe","/c",executeCmd});
           Process runtimeprocesses = Runtime.getRuntime().exec(new String[]{"cmd.exe","/c",executeCmds});

            int processComplete = runtimeprocess.waitFor();
            int processCompletes = runtimeprocesses.waitFor();

            /*if (processComplete == 0) {
            JOptionPane.showMessageDialog(null, "Backup Success");
            String email = "tharinduathukorala1@gmail.com";
            String path = savePath;
            EmailAttachmentSender send = new EmailAttachmentSender();
            send.attachment(email, path);
            } else {
            JOptionPane.showMessageDialog(null, "Backup Failed");
            
            }*/
            sendMail();
        }   catch (IOException | InterruptedException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error at backup" + ex.getMessage());

        }
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblCustomer;
    private javax.swing.JLabel lblGin;
    private javax.swing.JLabel lblInvoice;
    private javax.swing.JLabel lblItem;
    private javax.swing.JLabel lblSetting;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
private void theme() {
        
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private void sendMail() {
        
        String to="testmailvidu@gmail.com";//change accordingly  
        final String user="testmailvidu@gmail.com";//change accordingly  
        final String password=dbProperties.getProperty("password2");;//change accordingly  

        //1) get the session object     
        Properties props = new Properties();  
        props.setProperty("mail.transport.protocol", "smtp");     
        props.setProperty("mail.host", "smtp.gmail.com");  
        props.put("mail.smtp.auth", "true");  
        props.put("mail.smtp.port", "465");  
        props.put("mail.debug", "true");  
        props.put("mail.smtp.socketFactory.port", "465");  
        props.put("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory");  
        props.put("mail.smtp.socketFactory.fallback", "false");  
        Session session = Session.getDefaultInstance(props,  
        new javax.mail.Authenticator() {
           protected PasswordAuthentication getPasswordAuthentication() {  
           return new PasswordAuthentication(user,password);  
       }  
       });   

       //2) compose message     
       try{  
         MimeMessage message = new MimeMessage(session);  
         message.setFrom(new InternetAddress(user));  
         message.addRecipient(Message.RecipientType.TO,new InternetAddress(to));  
         message.setSubject("");  

         //3) create MimeBodyPart object and set your message text     
         BodyPart messageBodyPart1 = new MimeBodyPart();  
         messageBodyPart1.setText("");  

         //4) create new MimeBodyPart object and set DataHandler object to this object      
         MimeBodyPart messageBodyPart2 = new MimeBodyPart(); 
         MimeBodyPart messageBodyPart3 = new MimeBodyPart(); 

         File file = new File("C:/BackupP/backup.sql");
         File file2 = new File("C:/BackupP/backupAdvance.sql");
         
         //System.out.println(fc.getSelectedFile()+"1");
         String filename="PattaleBackup";//change accordingly
         String filename1="PattaleAdvanceBackup";
         
         DataSource source = new FileDataSource(file);  
         messageBodyPart2.setDataHandler(new DataHandler(source));  
         messageBodyPart2.setFileName(filename);  

         DataSource source1 = new FileDataSource(file2);  
         messageBodyPart3.setDataHandler(new DataHandler(source1));  
         messageBodyPart3.setFileName(filename1);

         //5) create Multipart object and add MimeBodyPart objects to this object      
         Multipart multipart = new MimeMultipart();  
         multipart.addBodyPart(messageBodyPart1);  
         multipart.addBodyPart(messageBodyPart2); 
         multipart.addBodyPart(messageBodyPart3); 

         //6) set the multiplart object to the message object  
         message.setContent(multipart );  

         //7) send message  
         Transport.send(message);
         JOptionPane.showMessageDialog(null,"Backup successfull!");

        System.out.println("message sent....");  
        }catch (MessagingException ex) {
            JOptionPane.showMessageDialog(null,"Backup Failed!You have an error anywhere");
            ex.printStackTrace();
        }
        
    }
}
